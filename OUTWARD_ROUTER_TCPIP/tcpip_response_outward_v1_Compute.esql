
PATH com.sb.logging;
CREATE COMPUTE MODULE tcpip_response_outward_v1_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
--		 CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN FALSE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		DECLARE msgId CHARACTER InputRoot.MQMD.MsgId;
		DECLARE correlationId CHARACTER InputRoot.MQRFH2.usr.RouterHeader.msgId;
		DECLARE protoType CHARACTER InputRoot.MQRFH2.usr.RouterHeader.replyProtocol;
		IF InputRoot.MQRFH2.usr.RouterHeader.replyProtocol = 'SOAP-HTTP' THEN
			SET OutputRoot.JSON = InputRoot.JSON; 
			SET OutputLocalEnvironment.Destination.HTTP.RequestIdentifier = CAST(InputRoot.MQRFH2.usr.RouterHeader.replyId AS BLOB);
			-- CALL AUDIT_LOGGING( msgId, msgId, '',protoType,'Info','OUTWARD_ROUTER_TCPIP','reqPropagation',inputChar,CURRENT_TIMESTAMP,CAST(InputRoot.Properties.CreationTime AS TIMESTAMP),'tcpip_request_outward_v1') IN Database.DSNFARU.SYSTEM;
			DECLARE outputChar CHARACTER CAST(ASBITSTREAM(InputRoot.JSON) AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
			CALL AUDIT_LOGGING( msgId, correlationId, '',protoType,'Info','OUTWARD_ROUTER_TCPIP','resPropagation',outputChar,CURRENT_TIMESTAMP,CAST(InputRoot.Properties.CreationTime AS TIMESTAMP),'tcpip_response_outward_v1') IN Database.DSNFARU.SYSTEM;
			PROPAGATE TO TERMINAL 'out1';
		ELSE
			SET OutputRoot = InputRoot;
			PROPAGATE TO TERMINAL 'out';
		END IF;
	END;
END MODULE;
